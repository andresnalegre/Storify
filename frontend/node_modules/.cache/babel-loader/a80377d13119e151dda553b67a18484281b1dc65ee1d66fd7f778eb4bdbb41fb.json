{"ast":null,"code":"var _jsxFileName = \"/Users/andresnicolasalegre/Desktop/overview/Storify/frontend/src/components/FileContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { formatFileSize, getFileIcon } from '../components/fileUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileContext = /*#__PURE__*/createContext();\nexport const FileProvider = ({\n  children\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const enhanceFileData = file => ({\n    ...file,\n    icon: getFileIcon(file.type),\n    formattedSize: formatFileSize(file.size)\n  });\n  const fetchFiles = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:8000/getFiles.php');\n      const data = await response.json();\n      if (data.success) {\n        const uniqueFiles = Array.from(new Map(data.files.map(file => [file.id, enhanceFileData(file)])).values());\n        setFiles(uniqueFiles);\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchFiles();\n  }, [fetchFiles]);\n  const addOrReplaceFile = async (fileData, replace = false, existingFileId = null) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', fileData.file);\n      formData.append('path', fileData.urlPath);\n      if (replace) {\n        formData.append('replace', 'true');\n        formData.append('existingFileId', existingFileId);\n      }\n      const response = await fetch('http://localhost:8000/getFiles.php', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        const newFileData = enhanceFileData(data.file);\n        setFiles(prevFiles => {\n          const uniqueFiles = new Map(prevFiles.map(file => [file.id, file]));\n          uniqueFiles.set(newFileData.id, newFileData);\n          return Array.from(uniqueFiles.values());\n        });\n        return {\n          success: true,\n          file: newFileData\n        };\n      } else if (data.error === 'FILE_EXISTS') {\n        return {\n          success: false,\n          error: 'FILE_EXISTS',\n          existingFile: data.existingFile\n        };\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const deleteFile = async fileId => {\n    try {\n      const response = await fetch('http://localhost:8000/getFiles.php', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: fileId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFiles(prevFiles => prevFiles.filter(file => file.id !== fileId));\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      console.error('Error deleting file:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const downloadFile = async file => {\n    try {\n      const response = await fetch(`http://localhost:8000/getFiles.php?download=true&id=${file.id}`);\n      if (!response.ok) {\n        throw new Error('Download failed');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = file.name;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Error downloading file:', err);\n      return {\n        success: false,\n        error: err.message\n      };\n    }\n  };\n  const value = {\n    files,\n    setFiles,\n    loading,\n    error,\n    addFile: fileData => addOrReplaceFile(fileData),\n    replaceFile: (fileData, existingFileId) => addOrReplaceFile(fileData, true, existingFileId),\n    deleteFile,\n    downloadFile,\n    refreshFiles: fetchFiles\n  };\n  return /*#__PURE__*/_jsxDEV(FileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(FileProvider, \"BXUToFjyk/RUg2SbMSGAataP2Sc=\");\n_c = FileProvider;\nexport const useFiles = () => {\n  _s2();\n  const context = useContext(FileContext);\n  if (!context) {\n    throw new Error('useFiles must be used within a FileProvider');\n  }\n  return context;\n};\n_s2(useFiles, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default FileContext;\nvar _c;\n$RefreshReg$(_c, \"FileProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","formatFileSize","getFileIcon","jsxDEV","_jsxDEV","FileContext","FileProvider","children","_s","files","setFiles","loading","setLoading","error","setError","enhanceFileData","file","icon","type","formattedSize","size","fetchFiles","response","fetch","data","json","success","uniqueFiles","Array","from","Map","map","id","values","Error","err","message","addOrReplaceFile","fileData","replace","existingFileId","formData","FormData","append","urlPath","method","body","newFileData","prevFiles","set","existingFile","console","deleteFile","fileId","headers","JSON","stringify","filter","downloadFile","ok","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","name","appendChild","click","revokeObjectURL","removeChild","value","addFile","replaceFile","refreshFiles","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFiles","_s2","context","$RefreshReg$"],"sources":["/Users/andresnicolasalegre/Desktop/overview/Storify/frontend/src/components/FileContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { formatFileSize, getFileIcon } from '../components/fileUtils';\n\nconst FileContext = createContext();\n\nexport const FileProvider = ({ children }) => {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const enhanceFileData = (file) => ({\n    ...file,\n    icon: getFileIcon(file.type),\n    formattedSize: formatFileSize(file.size),\n  });\n\n  const fetchFiles = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:8000/getFiles.php');\n      const data = await response.json();\n      \n      if (data.success) {\n        const uniqueFiles = Array.from(\n          new Map(data.files.map(file => [file.id, enhanceFileData(file)])).values()\n        );\n        \n        setFiles(uniqueFiles);\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchFiles();\n  }, [fetchFiles]);\n\n  const addOrReplaceFile = async (fileData, replace = false, existingFileId = null) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', fileData.file);\n      formData.append('path', fileData.urlPath);\n      if (replace) {\n        formData.append('replace', 'true');\n        formData.append('existingFileId', existingFileId);\n      }\n\n      const response = await fetch('http://localhost:8000/getFiles.php', {\n        method: 'POST',\n        body: formData\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        const newFileData = enhanceFileData(data.file);\n        \n        setFiles(prevFiles => {\n          const uniqueFiles = new Map(prevFiles.map(file => [file.id, file]));\n          uniqueFiles.set(newFileData.id, newFileData);\n          return Array.from(uniqueFiles.values());\n        });\n        \n        return { success: true, file: newFileData };\n      } else if (data.error === 'FILE_EXISTS') {\n        return { \n          success: false, \n          error: 'FILE_EXISTS',\n          existingFile: data.existingFile \n        };\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const deleteFile = async (fileId) => {\n    try {\n      const response = await fetch('http://localhost:8000/getFiles.php', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: fileId })\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setFiles(prevFiles => prevFiles.filter(file => file.id !== fileId));\n        return { success: true };\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      console.error('Error deleting file:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const downloadFile = async (file) => {\n    try {\n      const response = await fetch(`http://localhost:8000/getFiles.php?download=true&id=${file.id}`);\n      \n      if (!response.ok) {\n        throw new Error('Download failed');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = file.name;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      \n      return { success: true };\n    } catch (err) {\n      console.error('Error downloading file:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  const value = {\n    files,\n    setFiles,\n    loading,\n    error,\n    addFile: (fileData) => addOrReplaceFile(fileData),\n    replaceFile: (fileData, existingFileId) => addOrReplaceFile(fileData, true, existingFileId),\n    deleteFile,\n    downloadFile,\n    refreshFiles: fetchFiles\n  };\n\n  return (\n    <FileContext.Provider value={value}>\n      {children}\n    </FileContext.Provider>\n  );\n};\n\nexport const useFiles = () => {\n  const context = useContext(FileContext);\n  if (!context) {\n    throw new Error('useFiles must be used within a FileProvider');\n  }\n  return context;\n};\n\nexport default FileContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}